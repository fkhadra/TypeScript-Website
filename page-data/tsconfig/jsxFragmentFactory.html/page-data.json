{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/jsxFragmentFactory.html","result":{"pageContext":{"title":"jsxFragmentFactory","lang":"en","html":"<p>Specify the JSX fragment factory function to use when targeting react JSX emit with <code>jsxFactory</code> compiler option is specified, e.g. <code>Fragment</code>.</p>\n<p>For example with this TSConfig:</p>\n<pre><code class=\"language-json\" data-meta=\"tsconfig\">{\n  \"compilerOptions\": {\n    \"target\": \"esnext\",\n    \"module\": \"commonjs\",\n    \"jsx\": \"react\",\n    \"jsxFactory\": \"h\",\n    \"jsxFragmentFactory\": \"Fragment\"\n  }\n}\n</code></pre>\n<p>This TSX file:</p>\n<pre><code class=\"language-tsx\">import { h, Fragment } from \"preact\";\n\nconst HelloWorld = () => (\n  &#x3C;>\n    &#x3C;div>Hello&#x3C;/div>\n  &#x3C;/>\n);\n</code></pre>\n<p>Would look like:</p>\n<pre><code class=\"language-tsx\" data-meta=\"twoslash\">// @showEmit\n// @showEmittedFile: index.js\n// @jsxFactory: h\n// @jsxFragmentFactory: Fragment\n// @noErrors\n// @target: esnext\n// @module: commonjs\n\nimport { h, Fragment } from \"preact\";\n\nconst HelloWorld = () => (\n  &#x3C;>\n    &#x3C;div>Hello&#x3C;/div>\n  &#x3C;/>\n);\n</code></pre>\n<p>This option can be used on a per-file basis too similar to <a href=\"https://babeljs.io/docs/en/babel-plugin-transform-react-jsx#fragments\">Babelâ€™s <code>/* @jsxFrag h */</code> directive</a>.</p>\n<p>For example:</p>\n<pre><code class=\"language-tsx\" data-meta=\"twoslash\">/** @jsx h */\n/** @jsxFrag Fragment */\n\nimport { h, Fragment } from \"preact\";\n\nconst HelloWorld = () => (\n  &#x3C;>\n    &#x3C;div>Hello&#x3C;/div>\n  &#x3C;/>\n);\n</code></pre>","redirectHref":"/tsconfig#jsxFragmentFactory"}},"staticQueryHashes":[]}