{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/declaration.html","result":{"pageContext":{"title":"declaration","lang":"en","html":"<p>Generate <code>.d.ts</code> files for every TypeScript or JavaScript file inside your project.\nThese <code>.d.ts</code> files are type definition files which describe the external API of your module.\nWith <code>.d.ts</code> files, tools like TypeScript can provide intellisense and accurate types for un-typed code.</p>\n<p>When <code>declaration</code> is set to <code>true</code>, running the compiler with this TypeScript code:</p>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">export let helloWorld = \"hi\";\n</code></pre>\n<p>Will generate an <code>index.js</code> file like this:</p>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">// @showEmit\nexport let helloWorld = \"hi\";\n</code></pre>\n<p>With a corresponding <code>helloWorld.d.ts</code>:</p>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">// @showEmittedFile: index.d.ts\n// @showEmit\n// @declaration\nexport let helloWorld = \"hi\";\n</code></pre>\n<p>When working with <code>.d.ts</code> files for JavaScript files you may want to use <a href=\"#emitDeclarationOnly\"><code>emitDeclarationOnly</code></a> or use <a href=\"#outDir\"><code>outDir</code></a> to ensure that the JavaScript files are not overwritten.</p>","redirectHref":"/tsconfig#declaration"}},"staticQueryHashes":[]}