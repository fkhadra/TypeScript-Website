{"componentChunkName":"component---src-templates-documentation-tsx","path":"/pt/docs/handbook/utility-types.html","result":{"data":{"markdownRemark":{"id":"139ea06c-0c94-54d2-b60b-9f0217d32542","excerpt":"TypeScript provém vários tipos utilitários para facilitar transformações de tipo comum. Esses utilitários estão disponíveis globalmente. Partial<Type> Constrói…","html":"<p>TypeScript provém vários tipos utilitários para facilitar transformações de tipo comum. Esses utilitários estão disponíveis globalmente.</p>\n<h2 id=\"partialtype\" style=\"position:relative;\"><a href=\"#partialtype\" aria-label=\"partialtype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Partial&#x3C;Type></code></h2>\n<p>Constrói um tipo com todas as propriedades de <code>Type</code> definidas como opcionais. Esse utilitário irá retornar um tipo que representa todos os subconjuntos de um determinado tipo.</p>\n<h5 id=\"exemplo\" style=\"position:relative;\"><a href=\"#exemplo\" aria-label=\"exemplo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">interface Todo {\n  titulo: string;\n  descricao: string;\n}\n\nfunction atualizaTodo(todo: Todo, camposParaAtualizar: Partial&#x3C;Todo>) {\n  return { ...todo, ...camposParaAtualizar };\n}\n\nconst todo1 = {\n  titulo: \"organizar a mesa\",\n  descricao: \"limpar bagunça\",\n};\n\nconst todo2 = atualizaTodo(todo1, {\n  descricao: \"tirar o lixo\",\n});\n</code></pre>\n<h2 id=\"readonlytype\" style=\"position:relative;\"><a href=\"#readonlytype\" aria-label=\"readonlytype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Readonly&#x3C;Type></code></h2>\n<p>Constrói um tipo com todas as propriedades de <code>Type</code> definidas como <code>readonly</code>, significando que as propriedades do tipo construído não podem ser reatribuídas.</p>\n<h5 id=\"exemplo-1\" style=\"position:relative;\"><a href=\"#exemplo-1\" aria-label=\"exemplo 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">// @errors: 2540\ninterface Todo {\n  titulo: string;\n}\n\nconst todo: Readonly&#x3C;Todo> = {\n  titulo: \"Deleta usuários inativos\",\n};\n\ntodo.titulo = \"Olá\";\n</code></pre>\n<p>Esse utilitário é útil para representar expressões de atribuição que irão falhar em tempo de execução (Ex. Ao tentar reatribuir propriedades de um <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\">objeto congelado</a>).</p>\n<h5 id=\"objectfreeze\" style=\"position:relative;\"><a href=\"#objectfreeze\" aria-label=\"objectfreeze permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Object.freeze</code></h5>\n<pre><code class=\"language-ts\">function freeze&#x3C;Type>(obj: Type): Readonly&#x3C;Type>;\n</code></pre>\n<h2 id=\"recordkeystype\" style=\"position:relative;\"><a href=\"#recordkeystype\" aria-label=\"recordkeystype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Record&#x3C;Keys,Type></code></h2>\n<p>Constrói um tipo com um conjunto de propriedades <code>Keys</code> do tipo <code>Type</code>. Esse utilitário pode ser usado para mapear as propriedades de um tipo para outro tipo.</p>\n<h5 id=\"exemplo-2\" style=\"position:relative;\"><a href=\"#exemplo-2\" aria-label=\"exemplo 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">interface InfoPagina {\n  titulo: string;\n}\n\ntype Pagina = \"inicio\" | \"sobre\" | \"contato\";\n\nconst nav: Record&#x3C;Pagina, InfoPagina> = {\n  sobre: { titulo: \"sobre\" },\n  contato: { titulo: \"contato\" },\n  inicio: { titulo: \"inicio\" },\n};\n\nnav.sobre;\n// ^?\n</code></pre>\n<h2 id=\"picktype-keys\" style=\"position:relative;\"><a href=\"#picktype-keys\" aria-label=\"picktype keys permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Pick&#x3C;Type, Keys></code></h2>\n<p>Constrói um tipo pegando um conjunto de propriedades <code>Keys</code> de <code>Type</code>.</p>\n<h5 id=\"exemple\" style=\"position:relative;\"><a href=\"#exemple\" aria-label=\"exemple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemple</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">interface Todo {\n  titulo: string;\n  descricao: string;\n  completado: boolean;\n}\n\ntype TodoPreVisualizacao = Pick&#x3C;Todo, \"titulo\" | \"completado\">;\n\nconst todo: TodoPreVisualizacao = {\n  titulo: \"Limpar quarto\",\n  completado: false,\n};\n\ntodo;\n// ^?\n</code></pre>\n<h2 id=\"omittype-keys\" style=\"position:relative;\"><a href=\"#omittype-keys\" aria-label=\"omittype keys permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Omit&#x3C;Type, Keys></code></h2>\n<p>Constrói um tipo pegando todas as propriedades de <code>Type</code> e então removendo <code>Keys</code>.</p>\n<h5 id=\"exemplo-3\" style=\"position:relative;\"><a href=\"#exemplo-3\" aria-label=\"exemplo 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">interface Todo {\n  titulo: string;\n  descricao: string;\n  completado: boolean;\n}\n\ntype TodoPreVisualizacao = Omit&#x3C;Todo, \"descricao\">;\n\nconst todo: TodoPreVisualizacao = {\n  titulo: \"Limpar quarto\",\n  completado: false,\n};\n\ntodo;\n// ^?\n</code></pre>\n<h2 id=\"excludetype-excludedunion\" style=\"position:relative;\"><a href=\"#excludetype-excludedunion\" aria-label=\"excludetype excludedunion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Exclude&#x3C;Type, ExcludedUnion></code></h2>\n<p>Constrói um tipo excluindo de <code>Type</code> todos membros de união que são atribuíveis a <code>ExcludedUnion</code>.</p>\n<h5 id=\"exemplo-4\" style=\"position:relative;\"><a href=\"#exemplo-4\" aria-label=\"exemplo 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">type T0 = Exclude&#x3C;\"a\" | \"b\" | \"c\", \"a\">;\n//    ^?\ntype T1 = Exclude&#x3C;\"a\" | \"b\" | \"c\", \"a\" | \"b\">;\n//    ^?\ntype T2 = Exclude&#x3C;string | number | (() => void), Function>;\n//    ^?\n</code></pre>\n<h2 id=\"extracttype-union\" style=\"position:relative;\"><a href=\"#extracttype-union\" aria-label=\"extracttype union permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Extract&#x3C;Type, Union></code></h2>\n<p>Constrói um tipo extraindo de <code>Type</code> todos membros de união que são atribuíveis a <code>Union</code>.</p>\n<h5 id=\"exemplo-5\" style=\"position:relative;\"><a href=\"#exemplo-5\" aria-label=\"exemplo 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">type T0 = Extract&#x3C;\"a\" | \"b\" | \"c\", \"a\" | \"f\">;\n//    ^?\ntype T1 = Extract&#x3C;string | number | (() => void), Function>;\n//    ^?\n</code></pre>\n<h2 id=\"nonnullabletype\" style=\"position:relative;\"><a href=\"#nonnullabletype\" aria-label=\"nonnullabletype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>NonNullable&#x3C;Type></code></h2>\n<p>Constrói um tipo por excluir <code>null</code> e <code>undefined</code> de <code>Type</code>.</p>\n<h5 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">type T0 = NonNullable&#x3C;string | number | undefined>;\n//    ^?\ntype T1 = NonNullable&#x3C;string[] | null | undefined>;\n//    ^?\n</code></pre>\n<h2 id=\"parameterstype\" style=\"position:relative;\"><a href=\"#parameterstype\" aria-label=\"parameterstype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Parameters&#x3C;Type></code></h2>\n<p>Constrói uma tipo tupla a partir de tipos usados nos parâmetros de uma função tipo <code>Type</code>.</p>\n<h5 id=\"exemplo-6\" style=\"position:relative;\"><a href=\"#exemplo-6\" aria-label=\"exemplo 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">// @errors: 2344\ndeclare function f1(arg: { a: number; b: string }): void;\n\ntype T0 = Parameters&#x3C;() => string>;\n//    ^?\ntype T1 = Parameters&#x3C;(s: string) => void>;\n//    ^?\ntype T2 = Parameters&#x3C;&#x3C;T>(arg: T) => T>;\n//    ^?\ntype T3 = Parameters&#x3C;typeof f1>;\n//    ^?\ntype T4 = Parameters&#x3C;any>;\n//    ^?\ntype T5 = Parameters&#x3C;never>;\n//    ^?\ntype T6 = Parameters&#x3C;string>;\n//    ^?\ntype T7 = Parameters&#x3C;Function>;\n//    ^?\n</code></pre>\n<h2 id=\"constructorparameterstype\" style=\"position:relative;\"><a href=\"#constructorparameterstype\" aria-label=\"constructorparameterstype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>ConstructorParameters&#x3C;Type></code></h2>\n<p>Constrói um tipo tupla ou array a partir dos tipos de um tipo função construtora. Isso gera um tipo tupla com todos os tipos parâmetros (ou o tipo <code>never</code> se <code>Type</code> não for uma função).</p>\n<h5 id=\"exemplo-7\" style=\"position:relative;\"><a href=\"#exemplo-7\" aria-label=\"exemplo 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">// @errors: 2344\n// @strict: false\ntype T0 = ConstructorParameters&#x3C;ErrorConstructor>;\n//    ^?\ntype T1 = ConstructorParameters&#x3C;FunctionConstructor>;\n//    ^?\ntype T2 = ConstructorParameters&#x3C;RegExpConstructor>;\n//    ^?\ntype T3 = ConstructorParameters&#x3C;any>;\n//    ^?\ntype T4 = ConstructorParameters&#x3C;Function>;\n//    ^?\n</code></pre>\n<h2 id=\"returntypetype\" style=\"position:relative;\"><a href=\"#returntypetype\" aria-label=\"returntypetype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>ReturnType&#x3C;Type></code></h2>\n<p>Constrói um tipo consistindo do tipo retorno da função <code>Type</code>.</p>\n<h5 id=\"exemplo-8\" style=\"position:relative;\"><a href=\"#exemplo-8\" aria-label=\"exemplo 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">// @errors: 2344 2344\ndeclare function f1(): { a: number; b: string };\n\ntype T0 = ReturnType&#x3C;() => string>;\n//    ^?\ntype T1 = ReturnType&#x3C;(s: string) => void>;\n//    ^?\ntype T2 = ReturnType&#x3C;&#x3C;T>() => T>;\n//    ^?\ntype T3 = ReturnType&#x3C;&#x3C;T extends U, U extends number[]>() => T>;\n//    ^?\ntype T4 = ReturnType&#x3C;typeof f1>;\n//    ^?\ntype T5 = ReturnType&#x3C;any>;\n//    ^?\ntype T6 = ReturnType&#x3C;never>;\n//    ^?\ntype T7 = ReturnType&#x3C;string>;\n//    ^?\ntype T8 = ReturnType&#x3C;Function>;\n//    ^?\n</code></pre>\n<h2 id=\"instancetypetype\" style=\"position:relative;\"><a href=\"#instancetypetype\" aria-label=\"instancetypetype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>InstanceType&#x3C;Type></code></h2>\n<p>Constrói um tipo consistindo do tipo instancia de uma função construtora em <code>Type</code>.</p>\n<h5 id=\"exemplo-9\" style=\"position:relative;\"><a href=\"#exemplo-9\" aria-label=\"exemplo 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">// @errors: 2344 2344\n// @strict: false\nclass C {\n  x = 0;\n  y = 0;\n}\n\ntype T0 = InstanceType&#x3C;typeof C>;\n//    ^?\ntype T1 = InstanceType&#x3C;any>;\n//    ^?\ntype T2 = InstanceType&#x3C;never>;\n//    ^?\ntype T3 = InstanceType&#x3C;string>;\n//    ^?\ntype T4 = InstanceType&#x3C;Function>;\n//    ^?\n</code></pre>\n<h2 id=\"requiredtype\" style=\"position:relative;\"><a href=\"#requiredtype\" aria-label=\"requiredtype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Required&#x3C;Type></code></h2>\n<p>Constrói um tipo consistindo de todas propriedades de <code>T</code> definidas como obrigatórias. O oposto de <a href=\"#partialtype\"><code>Partial</code></a>.</p>\n<h5 id=\"exemplo-10\" style=\"position:relative;\"><a href=\"#exemplo-10\" aria-label=\"exemplo 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">// @errors: 2741\ninterface Props {\n  a?: number;\n  b?: string;\n}\n\nconst obj: Props = { a: 5 };\n\nconst obj2: Required&#x3C;Props> = { a: 5 };\n</code></pre>\n<h2 id=\"thisparametertypetype\" style=\"position:relative;\"><a href=\"#thisparametertypetype\" aria-label=\"thisparametertypetype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>ThisParameterType&#x3C;Type></code></h2>\n<p>Extrai o tipo do parâmetro <a href=\"/docs/handbook/functions.html#this-parameters\">this</a> para um tipo <code>function</code>, ou <a href=\"/docs/handbook/release-notes/typescript-3-0.html#new-unknown-top-type\">unknown</a> se o tipo da função não tem o parâmetro <code>this</code>.</p>\n<h5 id=\"exemplo-11\" style=\"position:relative;\"><a href=\"#exemplo-11\" aria-label=\"exemplo 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">function paraHex(this: Number) {\n  return this.toString(16);\n}\n\nfunction numeroToString(n: ThisParameterType&#x3C;typeof paraHex>) {\n  return paraHex.apply(n);\n}\n</code></pre>\n<h2 id=\"omitthisparametertype\" style=\"position:relative;\"><a href=\"#omitthisparametertype\" aria-label=\"omitthisparametertype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>OmitThisParameter&#x3C;Type></code></h2>\n<p>Remove o parâmetro <a href=\"/docs/handbook/functions.html#this-parameters\"><code>this</code></a> de <code>Type</code>. Se <code>Type</code> não tem parâmetro <code>this</code> explicitamente declarado, o resultado é simplesmente <code>Type</code>. Caso contrário, um novo tipo função sem o parâmetro <code>this</code> é criado a partir de <code>Type</code>. Generics são apagados e apenas a ultima assinatura sobrecarregada é propagada para o novo tipo função.</p>\n<h5 id=\"exemplo-12\" style=\"position:relative;\"><a href=\"#exemplo-12\" aria-label=\"exemplo 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">function paraHex(this: Number) {\n  return this.toString(16);\n}\n\nconst cincoParaHex: OmitThisParameter&#x3C;typeof paraHex> = paraHex.bind(5);\n\nconsole.log(cincoParaHex());\n</code></pre>\n<h2 id=\"thistypetype\" style=\"position:relative;\"><a href=\"#thistypetype\" aria-label=\"thistypetype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>ThisType&#x3C;Type></code></h2>\n<p>Esse utilitário não retorna um tipo transformado. Ao invés, serve como um marcador para um tipo contextual <a href=\"/docs/handbook/functions.html#this\"><code>this</code></a>. Note que a flag <code>--noImplicitThis</code> precisa ser ativada para usar esse utilitário.</p>\n<h5 id=\"exemplo-13\" style=\"position:relative;\"><a href=\"#exemplo-13\" aria-label=\"exemplo 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo</h5>\n<pre><code class=\"language-ts\" data-meta=\"twoslash\">// @noImplicitThis: false\ntype DescritorDeObjeto&#x3C;D, M> = {\n  dado?: D;\n  metodos?: M &#x26; ThisType&#x3C;D &#x26; M>; // Tipo de this em metodos é D &#x26; M\n};\n\nfunction fazObjeto&#x3C;D, M>(desc: DescritorDeObjeto&#x3C;D, M>): D &#x26; M {\n  let dado: object = desc.dado || {};\n  let metodos: object = desc.metodos || {};\n  return { ...dado, ...metodos } as D &#x26; M;\n}\n\nlet obj = fazObjeto({\n  dado: { x: 0, y: 0 },\n  metodos: {\n    moveBy(dx: number, dy: number) {\n      this.x += dx; // this fortemente tipado\n      this.y += dy; // this fortemente tipado\n    },\n  },\n});\n\nobj.x = 10;\nobj.y = 20;\nobj.moveBy(5, 5);\n</code></pre>\n<p>No exemplo acima, o objeto <code>metodos</code> no argumento para <code>fazObjeto</code> tem um tipo contextual que inclui <code>EsseTipo&#x3C;D &#x26; M></code> portanto o tipo de <a href=\"/docs/handbook/functions.html#this\">this</a> em metodos dentro do objeto <code>metodos</code> é <code>{ x: number, y: number } &#x26; { movePor(dx: number, dy: number): number }</code>. Perceba como o tipo da propriedade <code>metodos</code> é simultaneamente uma interface alvo e a fonte para o tipo <code>this</code> nos metodos.</p>\n<p>O marcador interface <code>EsseTipo&#x3C;T></code> é simplesmente uma interface vazia declarada em <code>lib.d.ts</code>. Além de ser reconhecida no tipo contextual de um objeto literal, a interface age como qualquer interface vazia.</p>","headings":[{"value":"Partial<Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"Readonly<Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"Object.freeze","depth":5},{"value":"Record<Keys,Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"Pick<Type, Keys>","depth":2},{"value":"Exemple","depth":5},{"value":"Omit<Type, Keys>","depth":2},{"value":"Exemplo","depth":5},{"value":"Exclude<Type, ExcludedUnion>","depth":2},{"value":"Exemplo","depth":5},{"value":"Extract<Type, Union>","depth":2},{"value":"Exemplo","depth":5},{"value":"NonNullable<Type>","depth":2},{"value":"Example","depth":5},{"value":"Parameters<Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"ConstructorParameters<Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"ReturnType<Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"InstanceType<Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"Required<Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"ThisParameterType<Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"OmitThisParameter<Type>","depth":2},{"value":"Exemplo","depth":5},{"value":"ThisType<Type>","depth":2},{"value":"Exemplo","depth":5}],"frontmatter":{"permalink":"/pt/docs/handbook/utility-types.html","title":"Tipos Utilitários","disable_toc":null,"handbook":null,"oneline":"Tipos que são inclusos globalmente em TypeScript","preamble":null,"deprecated_by":null,"deprecation_redirects":null}},"prev":null,"next":null},"pageContext":{"id":"2-tipos-utilitários","slug":"/pt/docs/handbook/utility-types.html","repoPath":"/packages/documentation/copy/pt/reference/Utility Types.md","lang":"pt","modifiedTime":"2021-05-31T12:18:20.883Z"}},"staticQueryHashes":[]}