{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/modules.html","result":{"data":{"markdownRemark":{"id":"48e80e7d-ee25-5ee2-b3fb-fe44f015d182","excerpt":"Starting with ECMAScript 2015, JavaScript has a concept of modules. TypeScript shares this concept. Modules are executed within their own scope, not in the…","html":"<p>Starting with ECMAScript 2015, JavaScript has a concept of modules. TypeScript shares this concept.</p>\n<p>Modules are executed within their own scope, not in the global scope; this means that variables, functions, classes, etc. declared in a module are not visible outside the module unless they are explicitly exported using one of the <a href=\"#export\"><code>export</code> forms</a>.\nConversely, to consume a variable, function, class, interface, etc. exported from a different module, it has to be imported using one of the <a href=\"#import\"><code>import</code> forms</a>.</p>\n<p>Modules are declarative; the relationships between modules are specified in terms of imports and exports at the file level.</p>\n<p>Modules import one another using a module loader.\nAt runtime the module loader is responsible for locating and executing all dependencies of a module before executing it.\nWell-known module loaders used in JavaScript are Node.js’s loader for <a href=\"https://wikipedia.org/wiki/CommonJS\">CommonJS</a> modules and the <a href=\"http://requirejs.org/\">RequireJS</a> loader for <a href=\"https://github.com/amdjs/amdjs-api/blob/master/AMD.md\">AMD</a> modules in Web applications.</p>\n<p>In TypeScript, just as in ECMAScript 2015, any file containing a top-level <code>import</code> or <code>export</code> is considered a module.\nConversely, a file without any top-level <code>import</code> or <code>export</code> declarations is treated as a script whose contents are available in the global scope (and therefore to modules as well).</p>\n<h2 id=\"export\" style=\"position:relative;\"><a href=\"#export\" aria-label=\"export permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Export</h2>\n<h2 id=\"exporting-a-declaration\" style=\"position:relative;\"><a href=\"#exporting-a-declaration\" aria-label=\"exporting a declaration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exporting a declaration</h2>\n<p>Any declaration (such as a variable, function, class, type alias, or interface) can be exported by adding the <code>export</code> keyword.</p>\n<h5 id=\"stringvalidatorts\" style=\"position:relative;\"><a href=\"#stringvalidatorts\" aria-label=\"stringvalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StringValidator.ts</h5>\n<pre><code class=\"language-ts\">export interface StringValidator {\n  isAcceptable(s: string): boolean;\n}\n</code></pre>\n<h5 id=\"zipcodevalidatorts\" style=\"position:relative;\"><a href=\"#zipcodevalidatorts\" aria-label=\"zipcodevalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZipCodeValidator.ts</h5>\n<pre><code class=\"language-ts\">import { StringValidator } from \"./StringValidator\";\n\nexport const numberRegexp = /^[0-9]+$/;\n\nexport class ZipCodeValidator implements StringValidator {\n  isAcceptable(s: string) {\n    return s.length === 5 &#x26;&#x26; numberRegexp.test(s);\n  }\n}\n</code></pre>\n<h2 id=\"export-statements\" style=\"position:relative;\"><a href=\"#export-statements\" aria-label=\"export statements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Export statements</h2>\n<p>Export statements are handy when exports need to be renamed for consumers, so the above example can be written as:</p>\n<pre><code class=\"language-ts\">class ZipCodeValidator implements StringValidator {\n  isAcceptable(s: string) {\n    return s.length === 5 &#x26;&#x26; numberRegexp.test(s);\n  }\n}\nexport { ZipCodeValidator };\nexport { ZipCodeValidator as mainValidator };\n</code></pre>\n<h2 id=\"re-exports\" style=\"position:relative;\"><a href=\"#re-exports\" aria-label=\"re exports permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Re-exports</h2>\n<p>Often modules extend other modules, and partially expose some of their features.\nA re-export does not import it locally, or introduce a local variable.</p>\n<h5 id=\"parseintbasedzipcodevalidatorts\" style=\"position:relative;\"><a href=\"#parseintbasedzipcodevalidatorts\" aria-label=\"parseintbasedzipcodevalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ParseIntBasedZipCodeValidator.ts</h5>\n<pre><code class=\"language-ts\">export class ParseIntBasedZipCodeValidator {\n  isAcceptable(s: string) {\n    return s.length === 5 &#x26;&#x26; parseInt(s).toString() === s;\n  }\n}\n\n// Export original validator but rename it\nexport { ZipCodeValidator as RegExpBasedZipCodeValidator } from \"./ZipCodeValidator\";\n</code></pre>\n<p>Optionally, a module can wrap one or more modules and combine all their exports using <code>export * from \"module\"</code> syntax.</p>\n<h5 id=\"allvalidatorsts\" style=\"position:relative;\"><a href=\"#allvalidatorsts\" aria-label=\"allvalidatorsts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AllValidators.ts</h5>\n<pre><code class=\"language-ts\">export * from \"./StringValidator\"; // exports 'StringValidator' interface\nexport * from \"./ZipCodeValidator\"; // exports 'ZipCodeValidator' class and 'numberRegexp' constant value\nexport * from \"./ParseIntBasedZipCodeValidator\"; //  exports the 'ParseIntBasedZipCodeValidator' class\n// and re-exports 'RegExpBasedZipCodeValidator' as alias\n// of the 'ZipCodeValidator' class from 'ZipCodeValidator.ts'\n// module.\n</code></pre>\n<h2 id=\"import\" style=\"position:relative;\"><a href=\"#import\" aria-label=\"import permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Import</h2>\n<p>Importing is just about as easy as exporting from a module.\nImporting an exported declaration is done through using one of the <code>import</code> forms below:</p>\n<h2 id=\"import-a-single-export-from-a-module\" style=\"position:relative;\"><a href=\"#import-a-single-export-from-a-module\" aria-label=\"import a single export from a module permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Import a single export from a module</h2>\n<pre><code class=\"language-ts\">import { ZipCodeValidator } from \"./ZipCodeValidator\";\n\nlet myValidator = new ZipCodeValidator();\n</code></pre>\n<p>imports can also be renamed</p>\n<pre><code class=\"language-ts\">import { ZipCodeValidator as ZCV } from \"./ZipCodeValidator\";\nlet myValidator = new ZCV();\n</code></pre>\n<h2 id=\"import-the-entire-module-into-a-single-variable-and-use-it-to-access-the-module-exports\" style=\"position:relative;\"><a href=\"#import-the-entire-module-into-a-single-variable-and-use-it-to-access-the-module-exports\" aria-label=\"import the entire module into a single variable and use it to access the module exports permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Import the entire module into a single variable, and use it to access the module exports</h2>\n<pre><code class=\"language-ts\">import * as validator from \"./ZipCodeValidator\";\nlet myValidator = new validator.ZipCodeValidator();\n</code></pre>\n<h2 id=\"import-a-module-for-side-effects-only\" style=\"position:relative;\"><a href=\"#import-a-module-for-side-effects-only\" aria-label=\"import a module for side effects only permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Import a module for side-effects only</h2>\n<p>Though not recommended practice, some modules set up some global state that can be used by other modules.\nThese modules may not have any exports, or the consumer is not interested in any of their exports.\nTo import these modules, use:</p>\n<pre><code class=\"language-ts\">import \"./my-module.js\";\n</code></pre>\n<h2 id=\"importing-types\" style=\"position:relative;\"><a href=\"#importing-types\" aria-label=\"importing types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Importing Types</h2>\n<p>Prior to TypeScript 3.8, you can import a type using <code>import</code>.\nWith TypeScript 3.8, you can import a type using the <code>import</code> statement, or using <code>import type</code>.</p>\n<pre><code class=\"language-ts\">// Re-using the same import\nimport { APIResponseType } from \"./api\";\n\n// Explicitly use import type\nimport type { APIResponseType } from \"./api\";\n</code></pre>\n<p><code>import type</code> is always guaranteed to be removed from your JavaScript, and tools like Babel can make better assumptions about your code via the <code>isolatedModules</code> compiler flag.\nYou can read more in the <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/#type-only-imports-exports\">3.8 release notes</a>.</p>\n<h2 id=\"default-exports\" style=\"position:relative;\"><a href=\"#default-exports\" aria-label=\"default exports permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Default exports</h2>\n<p>Each module can optionally export a <code>default</code> export.\nDefault exports are marked with the keyword <code>default</code>; and there can only be one <code>default</code> export per module.\n<code>default</code> exports are imported using a different import form.</p>\n<p><code>default</code> exports are really handy.\nFor instance, a library like jQuery might have a default export of <code>jQuery</code> or <code>$</code>, which we’d probably also import under the name <code>$</code> or <code>jQuery</code>.</p>\n<h5 id=\"jquerydts\" style=\"position:relative;\"><a href=\"#jquerydts\" aria-label=\"jquerydts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/jquery/JQuery.d.ts\">JQuery.d.ts</a></h5>\n<pre><code class=\"language-ts\">declare let $: JQuery;\nexport default $;\n</code></pre>\n<h5 id=\"appts\" style=\"position:relative;\"><a href=\"#appts\" aria-label=\"appts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App.ts</h5>\n<pre><code class=\"language-ts\">import $ from \"jquery\";\n\n$(\"button.continue\").html(\"Next Step...\");\n</code></pre>\n<p>Classes and function declarations can be authored directly as default exports.\nDefault export class and function declaration names are optional.</p>\n<h5 id=\"zipcodevalidatorts-1\" style=\"position:relative;\"><a href=\"#zipcodevalidatorts-1\" aria-label=\"zipcodevalidatorts 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZipCodeValidator.ts</h5>\n<pre><code class=\"language-ts\">export default class ZipCodeValidator {\n  static numberRegexp = /^[0-9]+$/;\n  isAcceptable(s: string) {\n    return s.length === 5 &#x26;&#x26; ZipCodeValidator.numberRegexp.test(s);\n  }\n}\n</code></pre>\n<h5 id=\"testts\" style=\"position:relative;\"><a href=\"#testts\" aria-label=\"testts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test.ts</h5>\n<pre><code class=\"language-ts\">import validator from \"./ZipCodeValidator\";\n\nlet myValidator = new validator();\n</code></pre>\n<p>or</p>\n<h5 id=\"staticzipcodevalidatorts\" style=\"position:relative;\"><a href=\"#staticzipcodevalidatorts\" aria-label=\"staticzipcodevalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StaticZipCodeValidator.ts</h5>\n<pre><code class=\"language-ts\">const numberRegexp = /^[0-9]+$/;\n\nexport default function (s: string) {\n  return s.length === 5 &#x26;&#x26; numberRegexp.test(s);\n}\n</code></pre>\n<h5 id=\"testts-1\" style=\"position:relative;\"><a href=\"#testts-1\" aria-label=\"testts 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test.ts</h5>\n<pre><code class=\"language-ts\">import validate from \"./StaticZipCodeValidator\";\n\nlet strings = [\"Hello\", \"98052\", \"101\"];\n\n// Use function validate\nstrings.forEach((s) => {\n  console.log(`\"${s}\" ${validate(s) ? \"matches\" : \"does not match\"}`);\n});\n</code></pre>\n<p><code>default</code> exports can also be just values:</p>\n<h5 id=\"onetwothreets\" style=\"position:relative;\"><a href=\"#onetwothreets\" aria-label=\"onetwothreets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OneTwoThree.ts</h5>\n<pre><code class=\"language-ts\">export default \"123\";\n</code></pre>\n<h5 id=\"logts\" style=\"position:relative;\"><a href=\"#logts\" aria-label=\"logts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Log.ts</h5>\n<pre><code class=\"language-ts\">import num from \"./OneTwoThree\";\n\nconsole.log(num); // \"123\"\n</code></pre>\n<h2 id=\"export-all-as-x\" style=\"position:relative;\"><a href=\"#export-all-as-x\" aria-label=\"export all as x permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Export all as x</h2>\n<p>With TypeScript 3.8, you can use <code>export * as ns</code> as a shorthand for re-exporting another module with a name:</p>\n<pre><code class=\"language-ts\">export * as utilities from \"./utilities\";\n</code></pre>\n<p>This takes all of the dependencies from a module and makes it an exported field, you could import it like this:</p>\n<pre><code class=\"language-ts\">import { utilities } from \"./index\";\n</code></pre>\n<h2 id=\"export--and-import--require\" style=\"position:relative;\"><a href=\"#export--and-import--require\" aria-label=\"export  and import  require permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>export =</code> and <code>import = require()</code></h2>\n<p>Both CommonJS and AMD generally have the concept of an <code>exports</code> object which contains all exports from a module.</p>\n<p>They also support replacing the <code>exports</code> object with a custom single object.\nDefault exports are meant to act as a replacement for this behavior; however, the two are incompatible.\nTypeScript supports <code>export =</code> to model the traditional CommonJS and AMD workflow.</p>\n<p>The <code>export =</code> syntax specifies a single object that is exported from the module.\nThis can be a class, interface, namespace, function, or enum.</p>\n<p>When exporting a module using <code>export =</code>, TypeScript-specific <code>import module = require(\"module\")</code> must be used to import the module.</p>\n<h5 id=\"zipcodevalidatorts-2\" style=\"position:relative;\"><a href=\"#zipcodevalidatorts-2\" aria-label=\"zipcodevalidatorts 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZipCodeValidator.ts</h5>\n<pre><code class=\"language-ts\">let numberRegexp = /^[0-9]+$/;\nclass ZipCodeValidator {\n  isAcceptable(s: string) {\n    return s.length === 5 &#x26;&#x26; numberRegexp.test(s);\n  }\n}\nexport = ZipCodeValidator;\n</code></pre>\n<h5 id=\"testts-2\" style=\"position:relative;\"><a href=\"#testts-2\" aria-label=\"testts 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test.ts</h5>\n<pre><code class=\"language-ts\">import zip = require(\"./ZipCodeValidator\");\n\n// Some samples to try\nlet strings = [\"Hello\", \"98052\", \"101\"];\n\n// Validators to use\nlet validator = new zip();\n\n// Show whether each string passed each validator\nstrings.forEach((s) => {\n  console.log(\n    `\"${s}\" - ${validator.isAcceptable(s) ? \"matches\" : \"does not match\"}`\n  );\n});\n</code></pre>\n<h2 id=\"code-generation-for-modules\" style=\"position:relative;\"><a href=\"#code-generation-for-modules\" aria-label=\"code generation for modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code Generation for Modules</h2>\n<p>Depending on the module target specified during compilation, the compiler will generate appropriate code for Node.js (<a href=\"http://wiki.commonjs.org/wiki/CommonJS\">CommonJS</a>), require.js (<a href=\"https://github.com/amdjs/amdjs-api/wiki/AMD\">AMD</a>), <a href=\"https://github.com/umdjs/umd\">UMD</a>, <a href=\"https://github.com/systemjs/systemjs\">SystemJS</a>, or <a href=\"http://www.ecma-international.org/ecma-262/6.0/#sec-modules\">ECMAScript 2015 native modules</a> (ES6) module-loading systems.\nFor more information on what the <code>define</code>, <code>require</code> and <code>register</code> calls in the generated code do, consult the documentation for each module loader.</p>\n<p>This simple example shows how the names used during importing and exporting get translated into the module loading code.</p>\n<h5 id=\"simplemodulets\" style=\"position:relative;\"><a href=\"#simplemodulets\" aria-label=\"simplemodulets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SimpleModule.ts</h5>\n<pre><code class=\"language-ts\">import m = require(\"mod\");\nexport let t = m.something + 1;\n</code></pre>\n<h5 id=\"amd--requirejs-simplemodulejs\" style=\"position:relative;\"><a href=\"#amd--requirejs-simplemodulejs\" aria-label=\"amd  requirejs simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AMD / RequireJS SimpleModule.js</h5>\n<pre><code class=\"language-js\">define([\"require\", \"exports\", \"./mod\"], function (require, exports, mod_1) {\n  exports.t = mod_1.something + 1;\n});\n</code></pre>\n<h5 id=\"commonjs--node-simplemodulejs\" style=\"position:relative;\"><a href=\"#commonjs--node-simplemodulejs\" aria-label=\"commonjs  node simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CommonJS / Node SimpleModule.js</h5>\n<pre><code class=\"language-js\">var mod_1 = require(\"./mod\");\nexports.t = mod_1.something + 1;\n</code></pre>\n<h5 id=\"umd-simplemodulejs\" style=\"position:relative;\"><a href=\"#umd-simplemodulejs\" aria-label=\"umd simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UMD SimpleModule.js</h5>\n<pre><code class=\"language-js\">(function (factory) {\n  if (typeof module === \"object\" &#x26;&#x26; typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" &#x26;&#x26; define.amd) {\n    define([\"require\", \"exports\", \"./mod\"], factory);\n  }\n})(function (require, exports) {\n  var mod_1 = require(\"./mod\");\n  exports.t = mod_1.something + 1;\n});\n</code></pre>\n<h5 id=\"system-simplemodulejs\" style=\"position:relative;\"><a href=\"#system-simplemodulejs\" aria-label=\"system simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>System SimpleModule.js</h5>\n<pre><code class=\"language-js\">System.register([\"./mod\"], function (exports_1) {\n  var mod_1;\n  var t;\n  return {\n    setters: [\n      function (mod_1_1) {\n        mod_1 = mod_1_1;\n      },\n    ],\n    execute: function () {\n      exports_1(\"t\", (t = mod_1.something + 1));\n    },\n  };\n});\n</code></pre>\n<h5 id=\"native-ecmascript-2015-modules-simplemodulejs\" style=\"position:relative;\"><a href=\"#native-ecmascript-2015-modules-simplemodulejs\" aria-label=\"native ecmascript 2015 modules simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Native ECMAScript 2015 modules SimpleModule.js</h5>\n<pre><code class=\"language-js\">import { something } from \"./mod\";\nexport var t = something + 1;\n</code></pre>\n<h2 id=\"simple-example\" style=\"position:relative;\"><a href=\"#simple-example\" aria-label=\"simple example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simple Example</h2>\n<p>Below, we’ve consolidated the Validator implementations used in previous examples to only export a single named export from each module.</p>\n<p>To compile, we must specify a module target on the command line. For Node.js, use <code>--module commonjs</code>;\nfor require.js, use <code>--module amd</code>. For example:</p>\n<pre><code class=\"language-Shell\">tsc --module commonjs Test.ts\n</code></pre>\n<p>When compiled, each module will become a separate <code>.js</code> file.\nAs with reference tags, the compiler will follow <code>import</code> statements to compile dependent files.</p>\n<h5 id=\"validationts\" style=\"position:relative;\"><a href=\"#validationts\" aria-label=\"validationts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Validation.ts</h5>\n<pre><code class=\"language-ts\">export interface StringValidator {\n  isAcceptable(s: string): boolean;\n}\n</code></pre>\n<h5 id=\"lettersonlyvalidatorts\" style=\"position:relative;\"><a href=\"#lettersonlyvalidatorts\" aria-label=\"lettersonlyvalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LettersOnlyValidator.ts</h5>\n<pre><code class=\"language-ts\">import { StringValidator } from \"./Validation\";\n\nconst lettersRegexp = /^[A-Za-z]+$/;\n\nexport class LettersOnlyValidator implements StringValidator {\n  isAcceptable(s: string) {\n    return lettersRegexp.test(s);\n  }\n}\n</code></pre>\n<h5 id=\"zipcodevalidatorts-3\" style=\"position:relative;\"><a href=\"#zipcodevalidatorts-3\" aria-label=\"zipcodevalidatorts 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZipCodeValidator.ts</h5>\n<pre><code class=\"language-ts\">import { StringValidator } from \"./Validation\";\n\nconst numberRegexp = /^[0-9]+$/;\n\nexport class ZipCodeValidator implements StringValidator {\n  isAcceptable(s: string) {\n    return s.length === 5 &#x26;&#x26; numberRegexp.test(s);\n  }\n}\n</code></pre>\n<h5 id=\"testts-3\" style=\"position:relative;\"><a href=\"#testts-3\" aria-label=\"testts 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test.ts</h5>\n<pre><code class=\"language-ts\">import { StringValidator } from \"./Validation\";\nimport { ZipCodeValidator } from \"./ZipCodeValidator\";\nimport { LettersOnlyValidator } from \"./LettersOnlyValidator\";\n\n// Some samples to try\nlet strings = [\"Hello\", \"98052\", \"101\"];\n\n// Validators to use\nlet validators: { [s: string]: StringValidator } = {};\nvalidators[\"ZIP code\"] = new ZipCodeValidator();\nvalidators[\"Letters only\"] = new LettersOnlyValidator();\n\n// Show whether each string passed each validator\nstrings.forEach((s) => {\n  for (let name in validators) {\n    console.log(\n      `\"${s}\" - ${\n        validators[name].isAcceptable(s) ? \"matches\" : \"does not match\"\n      } ${name}`\n    );\n  }\n});\n</code></pre>\n<h2 id=\"optional-module-loading-and-other-advanced-loading-scenarios\" style=\"position:relative;\"><a href=\"#optional-module-loading-and-other-advanced-loading-scenarios\" aria-label=\"optional module loading and other advanced loading scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Optional Module Loading and Other Advanced Loading Scenarios</h2>\n<p>In some cases, you may want to only load a module under some conditions.\nIn TypeScript, we can use the pattern shown below to implement this and other advanced loading scenarios to directly invoke the module loaders without losing type safety.</p>\n<p>The compiler detects whether each module is used in the emitted JavaScript.\nIf a module identifier is only ever used as part of a type annotations and never as an expression, then no <code>require</code> call is emitted for that module.\nThis elision of unused references is a good performance optimization, and also allows for optional loading of those modules.</p>\n<p>The core idea of the pattern is that the <code>import id = require(\"...\")</code> statement gives us access to the types exposed by the module.\nThe module loader is invoked (through <code>require</code>) dynamically, as shown in the <code>if</code> blocks below.\nThis leverages the reference-elision optimization so that the module is only loaded when needed.\nFor this pattern to work, it’s important that the symbol defined via an <code>import</code> is only used in type positions (i.e. never in a position that would be emitted into the JavaScript).</p>\n<p>To maintain type safety, we can use the <code>typeof</code> keyword.\nThe <code>typeof</code> keyword, when used in a type position, produces the type of a value, in this case the type of the module.</p>\n<h5 id=\"dynamic-module-loading-in-nodejs\" style=\"position:relative;\"><a href=\"#dynamic-module-loading-in-nodejs\" aria-label=\"dynamic module loading in nodejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic Module Loading in Node.js</h5>\n<pre><code class=\"language-ts\">declare function require(moduleName: string): any;\n\nimport { ZipCodeValidator as Zip } from \"./ZipCodeValidator\";\n\nif (needZipValidation) {\n  let ZipCodeValidator: typeof Zip = require(\"./ZipCodeValidator\");\n  let validator = new ZipCodeValidator();\n  if (validator.isAcceptable(\"...\")) {\n    /* ... */\n  }\n}\n</code></pre>\n<h5 id=\"sample-dynamic-module-loading-in-requirejs\" style=\"position:relative;\"><a href=\"#sample-dynamic-module-loading-in-requirejs\" aria-label=\"sample dynamic module loading in requirejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sample: Dynamic Module Loading in require.js</h5>\n<pre><code class=\"language-ts\">declare function require(\n  moduleNames: string[],\n  onLoad: (...args: any[]) => void\n): void;\n\nimport * as Zip from \"./ZipCodeValidator\";\n\nif (needZipValidation) {\n  require([\"./ZipCodeValidator\"], (ZipCodeValidator: typeof Zip) => {\n    let validator = new ZipCodeValidator.ZipCodeValidator();\n    if (validator.isAcceptable(\"...\")) {\n      /* ... */\n    }\n  });\n}\n</code></pre>\n<h5 id=\"sample-dynamic-module-loading-in-systemjs\" style=\"position:relative;\"><a href=\"#sample-dynamic-module-loading-in-systemjs\" aria-label=\"sample dynamic module loading in systemjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sample: Dynamic Module Loading in System.js</h5>\n<pre><code class=\"language-ts\">declare const System: any;\n\nimport { ZipCodeValidator as Zip } from \"./ZipCodeValidator\";\n\nif (needZipValidation) {\n  System.import(\"./ZipCodeValidator\").then((ZipCodeValidator: typeof Zip) => {\n    var x = new ZipCodeValidator();\n    if (x.isAcceptable(\"...\")) {\n      /* ... */\n    }\n  });\n}\n</code></pre>\n<h2 id=\"working-with-other-javascript-libraries\" style=\"position:relative;\"><a href=\"#working-with-other-javascript-libraries\" aria-label=\"working with other javascript libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Working with Other JavaScript Libraries</h2>\n<p>To describe the shape of libraries not written in TypeScript, we need to declare the API that the library exposes.</p>\n<p>We call declarations that don’t define an implementation “ambient”.\nTypically, these are defined in <code>.d.ts</code> files.\nIf you’re familiar with C/C++, you can think of these as <code>.h</code> files.\nLet’s look at a few examples.</p>\n<h2 id=\"ambient-modules\" style=\"position:relative;\"><a href=\"#ambient-modules\" aria-label=\"ambient modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ambient Modules</h2>\n<p>In Node.js, most tasks are accomplished by loading one or more modules.\nWe could define each module in its own <code>.d.ts</code> file with top-level export declarations, but it’s more convenient to write them as one larger <code>.d.ts</code> file.\nTo do so, we use a construct similar to ambient namespaces, but we use the <code>module</code> keyword and the quoted name of the module which will be available to a later import.\nFor example:</p>\n<h5 id=\"nodedts-simplified-excerpt\" style=\"position:relative;\"><a href=\"#nodedts-simplified-excerpt\" aria-label=\"nodedts simplified excerpt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>node.d.ts (simplified excerpt)</h5>\n<pre><code class=\"language-ts\">declare module \"url\" {\n  export interface Url {\n    protocol?: string;\n    hostname?: string;\n    pathname?: string;\n  }\n\n  export function parse(\n    urlStr: string,\n    parseQueryString?,\n    slashesDenoteHost?\n  ): Url;\n}\n\ndeclare module \"path\" {\n  export function normalize(p: string): string;\n  export function join(...paths: any[]): string;\n  export var sep: string;\n}\n</code></pre>\n<p>Now we can <code>/// &#x3C;reference></code> <code>node.d.ts</code> and then load the modules using <code>import url = require(\"url\");</code> or <code>import * as URL from \"url\"</code>.</p>\n<pre><code class=\"language-ts\">/// &#x3C;reference path=\"node.d.ts\"/>\nimport * as URL from \"url\";\nlet myUrl = URL.parse(\"http://www.typescriptlang.org\");\n</code></pre>\n<h3 id=\"shorthand-ambient-modules\" style=\"position:relative;\"><a href=\"#shorthand-ambient-modules\" aria-label=\"shorthand ambient modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shorthand ambient modules</h3>\n<p>If you don’t want to take the time to write out declarations before using a new module, you can use a shorthand declaration to get started quickly.</p>\n<h5 id=\"declarationsdts\" style=\"position:relative;\"><a href=\"#declarationsdts\" aria-label=\"declarationsdts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>declarations.d.ts</h5>\n<pre><code class=\"language-ts\">declare module \"hot-new-module\";\n</code></pre>\n<p>All imports from a shorthand module will have the <code>any</code> type.</p>\n<pre><code class=\"language-ts\">import x, { y } from \"hot-new-module\";\nx(y);\n</code></pre>\n<h3 id=\"wildcard-module-declarations\" style=\"position:relative;\"><a href=\"#wildcard-module-declarations\" aria-label=\"wildcard module declarations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wildcard module declarations</h3>\n<p>Some module loaders such as <a href=\"https://github.com/systemjs/systemjs/blob/master/docs/module-types.md\">SystemJS</a>\nand <a href=\"https://github.com/amdjs/amdjs-api/blob/master/LoaderPlugins.md\">AMD</a> allow non-JavaScript content to be imported.\nThese typically use a prefix or suffix to indicate the special loading semantics.\nWildcard module declarations can be used to cover these cases.</p>\n<pre><code class=\"language-ts\">declare module \"*!text\" {\n  const content: string;\n  export default content;\n}\n// Some do it the other way around.\ndeclare module \"json!*\" {\n  const value: any;\n  export default value;\n}\n</code></pre>\n<p>Now you can import things that match <code>\"*!text\"</code> or <code>\"json!*\"</code>.</p>\n<pre><code class=\"language-ts\">import fileContent from \"./xyz.txt!text\";\nimport data from \"json!http://example.com/data.json\";\nconsole.log(data, fileContent);\n</code></pre>\n<h3 id=\"umd-modules\" style=\"position:relative;\"><a href=\"#umd-modules\" aria-label=\"umd modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UMD modules</h3>\n<p>Some libraries are designed to be used in many module loaders, or with no module loading (global variables).\nThese are known as <a href=\"https://github.com/umdjs/umd\">UMD</a> modules.\nThese libraries can be accessed through either an import or a global variable.\nFor example:</p>\n<h5 id=\"math-libdts\" style=\"position:relative;\"><a href=\"#math-libdts\" aria-label=\"math libdts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>math-lib.d.ts</h5>\n<pre><code class=\"language-ts\">export function isPrime(x: number): boolean;\nexport as namespace mathLib;\n</code></pre>\n<p>The library can then be used as an import within modules:</p>\n<pre><code class=\"language-ts\">import { isPrime } from \"math-lib\";\nisPrime(2);\nmathLib.isPrime(2); // ERROR: can't use the global definition from inside a module\n</code></pre>\n<p>It can also be used as a global variable, but only inside of a script.\n(A script is a file with no imports or exports.)</p>\n<pre><code class=\"language-ts\">mathLib.isPrime(2);\n</code></pre>\n<h2 id=\"guidance-for-structuring-modules\" style=\"position:relative;\"><a href=\"#guidance-for-structuring-modules\" aria-label=\"guidance for structuring modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Guidance for structuring modules</h2>\n<h2 id=\"export-as-close-to-top-level-as-possible\" style=\"position:relative;\"><a href=\"#export-as-close-to-top-level-as-possible\" aria-label=\"export as close to top level as possible permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Export as close to top-level as possible</h2>\n<p>Consumers of your module should have as little friction as possible when using things that you export.\nAdding too many levels of nesting tends to be cumbersome, so think carefully about how you want to structure things.</p>\n<p>Exporting a namespace from your module is an example of adding too many layers of nesting.\nWhile namespaces sometime have their uses, they add an extra level of indirection when using modules.\nThis can quickly become a pain point for users, and is usually unnecessary.</p>\n<p>Static methods on an exported class have a similar problem - the class itself adds a layer of nesting.\nUnless it increases expressivity or intent in a clearly useful way, consider simply exporting a helper function.</p>\n<h3 id=\"if-youre-only-exporting-a-single-class-or-function-use-export-default\" style=\"position:relative;\"><a href=\"#if-youre-only-exporting-a-single-class-or-function-use-export-default\" aria-label=\"if youre only exporting a single class or function use export default permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>If you’re only exporting a single <code>class</code> or <code>function</code>, use <code>export default</code></h3>\n<p>Just as “exporting near the top-level” reduces friction on your module’s consumers, so does introducing a default export.\nIf a module’s primary purpose is to house one specific export, then you should consider exporting it as a default export.\nThis makes both importing and actually using the import a little easier.\nFor example:</p>\n<h4 id=\"myclassts\" style=\"position:relative;\"><a href=\"#myclassts\" aria-label=\"myclassts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyClass.ts</h4>\n<pre><code class=\"language-ts\">export default class SomeType {\n  constructor() { ... }\n}\n</code></pre>\n<h4 id=\"myfuncts\" style=\"position:relative;\"><a href=\"#myfuncts\" aria-label=\"myfuncts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyFunc.ts</h4>\n<pre><code class=\"language-ts\">export default function getThing() {\n  return \"thing\";\n}\n</code></pre>\n<h4 id=\"consumerts\" style=\"position:relative;\"><a href=\"#consumerts\" aria-label=\"consumerts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer.ts</h4>\n<pre><code class=\"language-ts\">import t from \"./MyClass\";\nimport f from \"./MyFunc\";\nlet x = new t();\nconsole.log(f());\n</code></pre>\n<p>This is optimal for consumers. They can name your type whatever they want (<code>t</code> in this case) and don’t have to do any excessive dotting to find your objects.</p>\n<h3 id=\"if-youre-exporting-multiple-objects-put-them-all-at-top-level\" style=\"position:relative;\"><a href=\"#if-youre-exporting-multiple-objects-put-them-all-at-top-level\" aria-label=\"if youre exporting multiple objects put them all at top level permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>If you’re exporting multiple objects, put them all at top-level</h3>\n<h4 id=\"mythingsts\" style=\"position:relative;\"><a href=\"#mythingsts\" aria-label=\"mythingsts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyThings.ts</h4>\n<pre><code class=\"language-ts\">export class SomeType {\n  /* ... */\n}\nexport function someFunc() {\n  /* ... */\n}\n</code></pre>\n<p>Conversely when importing:</p>\n<h3 id=\"explicitly-list-imported-names\" style=\"position:relative;\"><a href=\"#explicitly-list-imported-names\" aria-label=\"explicitly list imported names permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Explicitly list imported names</h3>\n<h4 id=\"consumerts-1\" style=\"position:relative;\"><a href=\"#consumerts-1\" aria-label=\"consumerts 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer.ts</h4>\n<pre><code class=\"language-ts\">import { SomeType, someFunc } from \"./MyThings\";\nlet x = new SomeType();\nlet y = someFunc();\n</code></pre>\n<h3 id=\"use-the-namespace-import-pattern-if-youre-importing-a-large-number-of-things\" style=\"position:relative;\"><a href=\"#use-the-namespace-import-pattern-if-youre-importing-a-large-number-of-things\" aria-label=\"use the namespace import pattern if youre importing a large number of things permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use the namespace import pattern if you’re importing a large number of things</h3>\n<h4 id=\"mylargemodulets\" style=\"position:relative;\"><a href=\"#mylargemodulets\" aria-label=\"mylargemodulets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyLargeModule.ts</h4>\n<pre><code class=\"language-ts\">export class Dog { ... }\nexport class Cat { ... }\nexport class Tree { ... }\nexport class Flower { ... }\n</code></pre>\n<h4 id=\"consumerts-2\" style=\"position:relative;\"><a href=\"#consumerts-2\" aria-label=\"consumerts 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer.ts</h4>\n<pre><code class=\"language-ts\">import * as myLargeModule from \"./MyLargeModule.ts\";\nlet x = new myLargeModule.Dog();\n</code></pre>\n<h2 id=\"re-export-to-extend\" style=\"position:relative;\"><a href=\"#re-export-to-extend\" aria-label=\"re export to extend permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Re-export to extend</h2>\n<p>Often you will need to extend functionality on a module.\nA common JS pattern is to augment the original object with <em>extensions</em>, similar to how JQuery extensions work.\nAs we’ve mentioned before, modules do not <em>merge</em> like global namespace objects would.\nThe recommended solution is to <em>not</em> mutate the original object, but rather export a new entity that provides the new functionality.</p>\n<p>Consider a simple calculator implementation defined in module <code>Calculator.ts</code>.\nThe module also exports a helper function to test the calculator functionality by passing a list of input strings and writing the result at the end.</p>\n<h4 id=\"calculatorts\" style=\"position:relative;\"><a href=\"#calculatorts\" aria-label=\"calculatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calculator.ts</h4>\n<pre><code class=\"language-ts\">export class Calculator {\n  private current = 0;\n  private memory = 0;\n  private operator: string;\n\n  protected processDigit(digit: string, currentValue: number) {\n    if (digit >= \"0\" &#x26;&#x26; digit &#x3C;= \"9\") {\n      return currentValue * 10 + (digit.charCodeAt(0) - \"0\".charCodeAt(0));\n    }\n  }\n\n  protected processOperator(operator: string) {\n    if ([\"+\", \"-\", \"*\", \"/\"].indexOf(operator) >= 0) {\n      return operator;\n    }\n  }\n\n  protected evaluateOperator(\n    operator: string,\n    left: number,\n    right: number\n  ): number {\n    switch (this.operator) {\n      case \"+\":\n        return left + right;\n      case \"-\":\n        return left - right;\n      case \"*\":\n        return left * right;\n      case \"/\":\n        return left / right;\n    }\n  }\n\n  private evaluate() {\n    if (this.operator) {\n      this.memory = this.evaluateOperator(\n        this.operator,\n        this.memory,\n        this.current\n      );\n    } else {\n      this.memory = this.current;\n    }\n    this.current = 0;\n  }\n\n  public handleChar(char: string) {\n    if (char === \"=\") {\n      this.evaluate();\n      return;\n    } else {\n      let value = this.processDigit(char, this.current);\n      if (value !== undefined) {\n        this.current = value;\n        return;\n      } else {\n        let value = this.processOperator(char);\n        if (value !== undefined) {\n          this.evaluate();\n          this.operator = value;\n          return;\n        }\n      }\n    }\n    throw new Error(`Unsupported input: '${char}'`);\n  }\n\n  public getResult() {\n    return this.memory;\n  }\n}\n\nexport function test(c: Calculator, input: string) {\n  for (let i = 0; i &#x3C; input.length; i++) {\n    c.handleChar(input[i]);\n  }\n\n  console.log(`result of '${input}' is '${c.getResult()}'`);\n}\n</code></pre>\n<p>Here is a simple test for the calculator using the exposed <code>test</code> function.</p>\n<h4 id=\"testcalculatorts\" style=\"position:relative;\"><a href=\"#testcalculatorts\" aria-label=\"testcalculatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TestCalculator.ts</h4>\n<pre><code class=\"language-ts\">import { Calculator, test } from \"./Calculator\";\n\nlet c = new Calculator();\ntest(c, \"1+2*33/11=\"); // prints 9\n</code></pre>\n<p>Now to extend this to add support for input with numbers in bases other than 10, let’s create <code>ProgrammerCalculator.ts</code></p>\n<h4 id=\"programmercalculatorts\" style=\"position:relative;\"><a href=\"#programmercalculatorts\" aria-label=\"programmercalculatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ProgrammerCalculator.ts</h4>\n<pre><code class=\"language-ts\">import { Calculator } from \"./Calculator\";\n\nclass ProgrammerCalculator extends Calculator {\n  static digits = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n  ];\n\n  constructor(public base: number) {\n    super();\n    const maxBase = ProgrammerCalculator.digits.length;\n    if (base &#x3C;= 0 || base > maxBase) {\n      throw new Error(`base has to be within 0 to ${maxBase} inclusive.`);\n    }\n  }\n\n  protected processDigit(digit: string, currentValue: number) {\n    if (ProgrammerCalculator.digits.indexOf(digit) >= 0) {\n      return (\n        currentValue * this.base + ProgrammerCalculator.digits.indexOf(digit)\n      );\n    }\n  }\n}\n\n// Export the new extended calculator as Calculator\nexport { ProgrammerCalculator as Calculator };\n\n// Also, export the helper function\nexport { test } from \"./Calculator\";\n</code></pre>\n<p>The new module <code>ProgrammerCalculator</code> exports an API shape similar to that of the original <code>Calculator</code> module, but does not augment any objects in the original module.\nHere is a test for our ProgrammerCalculator class:</p>\n<h4 id=\"testprogrammercalculatorts\" style=\"position:relative;\"><a href=\"#testprogrammercalculatorts\" aria-label=\"testprogrammercalculatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TestProgrammerCalculator.ts</h4>\n<pre><code class=\"language-ts\">import { Calculator, test } from \"./ProgrammerCalculator\";\n\nlet c = new Calculator(2);\ntest(c, \"001+010=\"); // prints 3\n</code></pre>\n<h2 id=\"do-not-use-namespaces-in-modules\" style=\"position:relative;\"><a href=\"#do-not-use-namespaces-in-modules\" aria-label=\"do not use namespaces in modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Do not use namespaces in modules</h2>\n<p>When first moving to a module-based organization, a common tendency is to wrap exports in an additional layer of namespaces.\nModules have their own scope, and only exported declarations are visible from outside the module.\nWith this in mind, namespace provide very little, if any, value when working with modules.</p>\n<p>On the organization front, namespaces are handy for grouping together logically-related objects and types in the global scope.\nFor example, in C#, you’re going to find all the collection types in System.Collections.\nBy organizing our types into hierarchical namespaces, we provide a good “discovery” experience for users of those types.\nModules, on the other hand, are already present in a file system, necessarily.\nWe have to resolve them by path and filename, so there’s a logical organization scheme for us to use.\nWe can have a /collections/generic/ folder with a list module in it.</p>\n<p>Namespaces are important to avoid naming collisions in the global scope.\nFor example, you might have <code>My.Application.Customer.AddForm</code> and <code>My.Application.Order.AddForm</code> — two types with the same name, but a different namespace.\nThis, however, is not an issue with modules.\nWithin a module, there’s no plausible reason to have two objects with the same name.\nFrom the consumption side, the consumer of any given module gets to pick the name that they will use to refer to the module, so accidental naming conflicts are impossible.</p>\n<blockquote>\n<p>For more discussion about modules and namespaces see <a href=\"/docs/handbook/namespaces-and-modules.html\">Namespaces and Modules</a>.</p>\n</blockquote>\n<h2 id=\"red-flags\" style=\"position:relative;\"><a href=\"#red-flags\" aria-label=\"red flags permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Red Flags</h2>\n<p>All of the following are red flags for module structuring. Double-check that you’re not trying to namespace your external modules if any of these apply to your files:</p>\n<ul>\n<li>A file whose only top-level declaration is <code>export namespace Foo { ... }</code> (remove <code>Foo</code> and move everything ‘up’ a level)</li>\n<li>Multiple files that have the same <code>export namespace Foo {</code> at top-level (don’t think that these are going to combine into one <code>Foo</code>!)</li>\n</ul>","headings":[{"value":"Export","depth":2},{"value":"Exporting a declaration","depth":2},{"value":"StringValidator.ts","depth":5},{"value":"ZipCodeValidator.ts","depth":5},{"value":"Export statements","depth":2},{"value":"Re-exports","depth":2},{"value":"ParseIntBasedZipCodeValidator.ts","depth":5},{"value":"AllValidators.ts","depth":5},{"value":"Import","depth":2},{"value":"Import a single export from a module","depth":2},{"value":"Import the entire module into a single variable, and use it to access the module exports","depth":2},{"value":"Import a module for side-effects only","depth":2},{"value":"Importing Types","depth":2},{"value":"Default exports","depth":2},{"value":"JQuery.d.ts","depth":5},{"value":"App.ts","depth":5},{"value":"ZipCodeValidator.ts","depth":5},{"value":"Test.ts","depth":5},{"value":"StaticZipCodeValidator.ts","depth":5},{"value":"Test.ts","depth":5},{"value":"OneTwoThree.ts","depth":5},{"value":"Log.ts","depth":5},{"value":"Export all as x","depth":2},{"value":"export = and import = require()","depth":2},{"value":"ZipCodeValidator.ts","depth":5},{"value":"Test.ts","depth":5},{"value":"Code Generation for Modules","depth":2},{"value":"SimpleModule.ts","depth":5},{"value":"AMD / RequireJS SimpleModule.js","depth":5},{"value":"CommonJS / Node SimpleModule.js","depth":5},{"value":"UMD SimpleModule.js","depth":5},{"value":"System SimpleModule.js","depth":5},{"value":"Native ECMAScript 2015 modules SimpleModule.js","depth":5},{"value":"Simple Example","depth":2},{"value":"Validation.ts","depth":5},{"value":"LettersOnlyValidator.ts","depth":5},{"value":"ZipCodeValidator.ts","depth":5},{"value":"Test.ts","depth":5},{"value":"Optional Module Loading and Other Advanced Loading Scenarios","depth":2},{"value":"Dynamic Module Loading in Node.js","depth":5},{"value":"Sample: Dynamic Module Loading in require.js","depth":5},{"value":"Sample: Dynamic Module Loading in System.js","depth":5},{"value":"Working with Other JavaScript Libraries","depth":2},{"value":"Ambient Modules","depth":2},{"value":"node.d.ts (simplified excerpt)","depth":5},{"value":"Shorthand ambient modules","depth":3},{"value":"declarations.d.ts","depth":5},{"value":"Wildcard module declarations","depth":3},{"value":"UMD modules","depth":3},{"value":"math-lib.d.ts","depth":5},{"value":"Guidance for structuring modules","depth":2},{"value":"Export as close to top-level as possible","depth":2},{"value":"If you’re only exporting a single class or function, use export default","depth":3},{"value":"MyClass.ts","depth":4},{"value":"MyFunc.ts","depth":4},{"value":"Consumer.ts","depth":4},{"value":"If you’re exporting multiple objects, put them all at top-level","depth":3},{"value":"MyThings.ts","depth":4},{"value":"Explicitly list imported names","depth":3},{"value":"Consumer.ts","depth":4},{"value":"Use the namespace import pattern if you’re importing a large number of things","depth":3},{"value":"MyLargeModule.ts","depth":4},{"value":"Consumer.ts","depth":4},{"value":"Re-export to extend","depth":2},{"value":"Calculator.ts","depth":4},{"value":"TestCalculator.ts","depth":4},{"value":"ProgrammerCalculator.ts","depth":4},{"value":"TestProgrammerCalculator.ts","depth":4},{"value":"Do not use namespaces in modules","depth":2},{"value":"Red Flags","depth":2}],"frontmatter":{"permalink":"/docs/handbook/modules.html","title":"Modules","disable_toc":null,"handbook":null,"oneline":"How modules work in TypeScript","preamble":null,"deprecated_by":null,"deprecation_redirects":null}},"prev":null,"next":null},"pageContext":{"id":"2-modules","slug":"/docs/handbook/modules.html","repoPath":"/packages/documentation/copy/en/reference/Modules.md","lang":"en","modifiedTime":"2021-05-31T12:14:15.532Z"}},"staticQueryHashes":[]}